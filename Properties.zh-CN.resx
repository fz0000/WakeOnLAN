<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel_Button.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="lNotes.Text" xml:space="preserve">
    <value>注释</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbGroup.Location" type="System.Drawing.Point, System.Drawing">
    <value>29, 54</value>
  </data>
  <data name="lbGroup.Size" type="System.Drawing.Size, System.Drawing">
    <value>31, 13</value>
  </data>
  <data name="lbGroup.Text" xml:space="preserve">
    <value>组</value>
  </data>
  <data name="lbName.Location" type="System.Drawing.Point, System.Drawing">
    <value>29, 28</value>
  </data>
  <data name="lbName.Size" type="System.Drawing.Size, System.Drawing">
    <value>31, 13</value>
  </data>
  <data name="lbName.Text" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="MachineName.ErrorMessage" xml:space="preserve">
    <value>无效的计算机名</value>
  </data>
  <data name="MachineName.ToolTip" xml:space="preserve">
    <value>这是计算机的名称。请输入一个有效的名称，包含字母、数字、短划线或下划线。</value>
  </data>
  <data name="TabProperties.Text" xml:space="preserve">
    <value>显示属性</value>
  </data>
  <data name="Repeat.ErrorMessage" xml:space="preserve">
    <value>重复次数无效</value>
  </data>
  <data name="lbRepeat.Text" xml:space="preserve">
    <value>重复</value>
  </data>
  <data name="cbKeepAlive.Text" xml:space="preserve">
    <value>保持连接</value>
  </data>
  <data name="lbUDP.Location" type="System.Drawing.Point, System.Drawing">
    <value>37, 133</value>
  </data>
  <data name="lbUDP.Size" type="System.Drawing.Size, System.Drawing">
    <value>54, 13</value>
  </data>
  <data name="lbUDP.Text" xml:space="preserve">
    <value>UDP端口</value>
  </data>
  <data name="lbTTL.Location" type="System.Drawing.Point, System.Drawing">
    <value>57, 159</value>
  </data>
  <data name="lbTTL.Size" type="System.Drawing.Size, System.Drawing">
    <value>84, 13</value>
  </data>
  <data name="lbTTL.Text" xml:space="preserve">
    <value>TTL</value>
  </data>
  <data name="lbMAC.Location" type="System.Drawing.Point, System.Drawing">
    <value>33, 26</value>
  </data>
  <data name="lbMAC.Size" type="System.Drawing.Size, System.Drawing">
    <value>57, 13</value>
  </data>
  <data name="lbMAC.Text" xml:space="preserve">
    <value>MAC地址</value>
  </data>
  <data name="bCalcBroadcast.Text" xml:space="preserve">
    <value>计算</value>
  </data>
  <data name="lbNetbios.Location" type="System.Drawing.Point, System.Drawing">
    <value>35, 109</value>
  </data>
  <data name="lbNetbios.Size" type="System.Drawing.Size, System.Drawing">
    <value>55, 13</value>
  </data>
  <data name="lbNetbios.Text" xml:space="preserve">
    <value>FQDN/IP</value>
  </data>
  <data name="lbSendTo.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 13</value>
  </data>
  <data name="lbSendTo.Text" xml:space="preserve">
    <value>发送WOL到</value>
  </data>
  <data name="rbURI.Size" type="System.Drawing.Size, System.Drawing">
    <value>70, 17</value>
  </data>
  <data name="rbURI.Text" xml:space="preserve">
    <value>FQDN/IP</value>
  </data>
  <data name="rbIP.Size" type="System.Drawing.Size, System.Drawing">
    <value>83, 17</value>
  </data>
  <data name="rbIP.Text" xml:space="preserve">
    <value>广播IP</value>
  </data>
  <data name="lbBroadcast.Location" type="System.Drawing.Point, System.Drawing">
    <value>24, 80</value>
  </data>
  <data name="lbBroadcast.Size" type="System.Drawing.Size, System.Drawing">
    <value>67, 13</value>
  </data>
  <data name="lbBroadcast.Text" xml:space="preserve">
    <value>广播地址</value>
  </data>
  <data name="tHostURI.ErrorMessage" xml:space="preserve">
    <value>无效的计算机名称</value>
  </data>
  <data name="TTL.ErrorMessage" xml:space="preserve">
    <value>无效TTL值</value>
  </data>
  <data name="UDPPort.ErrorMessage" xml:space="preserve">
    <value>无效UDP端口</value>
  </data>
  <data name="Broadcast.ErrorMessage" xml:space="preserve">
    <value>无效IP地址。请使用###.###.###.###格式</value>
  </data>
  <data name="MAC.ErrorMessage" xml:space="preserve">
    <value>无效IP地址。请使用###.###.###.###格式</value>
  </data>
  <data name="MAC.ToolTip" xml:space="preserve">
    <value>输入计算机的MAC地址。此地址用于唤醒消息。有效的MAC地址为6对十六进制数字，以“:”或“-”分隔。例如：01:00:22:32:af:d0</value>
  </data>
  <data name="TabWakeUp.Text" xml:space="preserve">
    <value>唤醒</value>
  </data>
  <data name="IP.ErrorMessage" xml:space="preserve">
    <value>无效IP地址。请使用###.###.###.###格式</value>
  </data>
  <data name="lbIP.Location" type="System.Drawing.Point, System.Drawing">
    <value>26, 25</value>
  </data>
  <data name="lbIP.Size" type="System.Drawing.Size, System.Drawing">
    <value>44, 13</value>
  </data>
  <data name="lbIP.Text" xml:space="preserve">
    <value>本地IP地址</value>
  </data>
  <data name="lbLeaveBlank.Size" type="System.Drawing.Size, System.Drawing">
    <value>120, 13</value>
  </data>
  <data name="lbLeaveBlank.Text" xml:space="preserve">
    <value>* 留空则使用DHCP分配的地址</value>
  </data>
  <data name="tRDPFilename.ErrorMessage" xml:space="preserve">
    <value>无效的RDP端口</value>
  </data>
  <data name="tRDPFilename.ToolTip" xml:space="preserve">
    <value>远程桌面端口</value>
  </data>
  <data name="lbRDPFile.Text" xml:space="preserve">
    <value>RDP文件</value>
  </data>
  <data name="GroupBox1.Text" xml:space="preserve">
    <value>远程桌面</value>
  </data>
  <data name="TabStatus.Text" xml:space="preserve">
    <value>状态/控制</value>
  </data>
  <data name="lDomain.Text" xml:space="preserve">
    <value>域名</value>
  </data>
  <data name="lPassword.Location" type="System.Drawing.Point, System.Drawing">
    <value>29, 117</value>
  </data>
  <data name="lPassword.Text" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="lUserId.Text" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="lDescription.Text" xml:space="preserve">
    <value>您可以选择输入用于关机操作的账号、密码和域名。如需使用默认凭证，请将这些字段留空。</value>
  </data>
  <data name="LabelShutdownMethod.Text" xml:space="preserve">
    <value>关机方式</value>
  </data>
  <data name="ComboBoxShutdownMethod.Items" xml:space="preserve">
    <value>WMI</value>
  </data>
  <data name="ComboBoxShutdownMethod.Items1" xml:space="preserve">
    <value>自定义</value>
  </data>
  <data name="ComboBoxShutdownMethod.Items2" xml:space="preserve">
    <value>传统模式</value>
  </data>
  <data name="lbShutdownCommand.Size" type="System.Drawing.Size, System.Drawing">
    <value>67, 13</value>
  </data>
  <data name="lbShutdownCommand.Text" xml:space="preserve">
    <value>关机命令(可选):</value>
  </data>
  <data name="CheckBox_Emergency.Size" type="System.Drawing.Size, System.Drawing">
    <value>74, 17</value>
  </data>
  <data name="CheckBox_Emergency.Text" xml:space="preserve">
    <value>紧急关机</value>
  </data>
  <data name="TabShutdown.Text" xml:space="preserve">
    <value>关机</value>
  </data>
  <data name="Help_Button.Text" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="Delete_Button.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>属性</value>
  </data>
  <data name="OK_Button.Text" xml:space="preserve">
    <value>确定</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
</root>